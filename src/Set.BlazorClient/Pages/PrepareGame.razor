@page "/prepareGame"

@inject NavigationManager navigationManager
@inject Set.BlazorClient.Services.GameService gameService

<div class="container mx-auto px-4 lg:my-3 xl:my-6 flex flex-col justify-start sm:w-4/5 md:w-3/5">

    <div class="mt-3 lg:my-3 xl:my-6 text-center">
        <span class="m-1 text-teal-700 font-semibold border-teal-300 uppercase text-sm lg:text-xl xl:text-4xl">
            Prepare game
        </span>
    </div>


    <div class="m-1 mt-4 flex justify-evenly lg:mt-6">

        <div class="w-32">

            <span class="text-sm text-teal-500 tracking-widest lg:text-lg">Game mode</span>


            <label class="flex items-center mt-1 lg:text-xl lg:mt-2">
                <input type="radio"
                       class="form-radio text-teal-700 xl:mr-1"
                       name="game-mode"
                         @bind="selectedMode"
                       checked />
                <span class="ml-2">Tutorial</span>
            </label>

            <label class="flex items-center mt-1 lg:text-xl">
                <input type="radio"
                       class="form-radio text-teal-700 xl:mr-1"
                       name="game-mode"
                       @bind="selectedMode" />
                <span class="ml-2">Easy</span>
            </label>

            <label class="flex items-center mt-1 lg:text-xl">
                <input type="radio"
                       class="form-radio text-teal-700 xl:mr-1"
                       name="game-mode"
                       @bind="selectedMode" />
                <span class="ml-2">Regular</span>
            </label>
        </div>

        <NumericUpDown Value="cards" Maximum="SelectedMode.MaxCardNumber" Minimum="Set.Core.GameOptions.DefaultMinCardNumber" Title="Cards" />
        <NumericUpDown Value="seconds" Maximum="3600" Minimum="1" Title="Seconds" />

    </div>



    <div class="flex justify-between mt-4 lg:mt-8">

        <button @onclick="GoBack" class="w-3/5 uppercase bg-teal-700 text-white hover:bg-teal-600 font-semibold p-2 m-1
  md:p-4 md:text-xl
   md:text-2xl
    outline-none focus:outline-none
    flex items-center justify-center">
            <svg viewBox="0 0 20 20" fill="currentColor" class="chevron-left w-6 h-6 mr-1"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
            <span>Back</span>
        </button>

        <button @onclick="Play" class="w-3/5 uppercase bg-teal-700 text-white hover:bg-teal-600 font-semibold p-2 m-1
  md:p-4 md:text-xl
   md:text-2xl
    outline-none focus:outline-none
    flex items-center justify-center">
            <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" class="play w-6 h-6 mr-1"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            <span>play</span>
        </button>


    </div>


</div>

@code
{
    private int cards = 27;
    private int seconds = 300;
    private string selectedMode = "Tutorial";

    private Set.Core.GameMode SelectedMode
    {
        get
        {
            if (selectedMode.Equals("Tutorial")) return Set.Core.GameModeFactory.Tutorial;
            if (selectedMode.Equals("Easy")) return Set.Core.GameModeFactory.Easy;
            return Set.Core.GameModeFactory.Regular;
        }
    }

    private void Play()
    {
        gameService.SetNextGameOptions(new Core.GameOptions(cards, SelectedMode, new TimeSpan(0, 0, seconds)));
        navigationManager.NavigateTo("playGame");
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/");
    }
}
