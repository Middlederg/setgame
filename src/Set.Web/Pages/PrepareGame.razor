@page "/prepareGame"

@inject NavigationManager navigationManager
@inject GameService gameService


<div class="@Styles.Container">
    <div class="w-full max-w-3xl flex flex-col">

        <div class="lg:my-3 xl:my-6 text-center">
            <span class="@Styles.Title">
                Prepare game
            </span>
        </div>

        <div class="mt-6 w-full max-w-3xl flex flex-col md:flex-row md:justify-evenly space-y-4 md:space-y-0">

            <div class="flex flex-col space-y-1">

                <span class="@Styles.SubTitle">
                    Game mode
                </span>

                <label class="flex items-center lg:text-xl lg:mt-2">
                    <input type="radio"
                           class="form-radio text-@Styles.Text xl:mr-1"
                           name="game-mode"
                           @bind="selectedMode"
                           checked />
                    <span class="ml-2">Tutorial</span>
                </label>

                <label class="flex items-center lg:text-xl">
                    <input type="radio"
                           class="form-radio text-@Styles.Text xl:mr-1"
                           name="game-mode"
                           @bind="selectedMode" />
                    <span class="ml-2">Easy</span>
                </label>

                <label class="flex items-center lg:text-xl">
                    <input type="radio"
                           class="form-radio text-@Styles.Text xl:mr-1"
                           name="game-mode"
                           @bind="selectedMode" />
                    <span class="ml-2">Regular</span>
                </label>
            </div>

            <NumericUpDown Value="cards"
                           Maximum="SelectedMode.MaxCardNumber"
                           Minimum="Set.Core.GameOptions.DefaultMinCardNumber"
                           Title="Cards" />

            <NumericUpDown Value="seconds"
                           Maximum="3600"
                           Minimum="1"
                           Title="Seconds" />




        </div>

        <div class="flex-1 max-h-40">

        </div>

        <div class="mt-10 flex justify-between space-x-6">

            <PrimaryButton Text="Back" OnButtonClicked="GoBack">
                <svg viewBox="0 0 20 20" fill="currentColor" class="chevron-left w-6 h-6 mr-1"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
            </PrimaryButton>

            <PrimaryButton Text="Play" OnButtonClicked="Play">
                <svg fill="none" viewBox="0 0 24 24" stroke="currentColor" class="play w-6 h-6 mr-1"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            </PrimaryButton>

        </div>
    </div>
</div>

@code
{
    private int cards = 27;
    private int seconds = 300;
    private string selectedMode = "Tutorial";

    private Set.Core.GameMode SelectedMode
    {
        get
        {
            if (selectedMode.Equals("Tutorial")) return Set.Core.GameModeFactory.Tutorial;
            if (selectedMode.Equals("Easy")) return Set.Core.GameModeFactory.Easy;
            return Set.Core.GameModeFactory.Regular;
        }
    }

    private void Play()
    {
        gameService.SetNextGameOptions(new Core.GameOptions(cards, SelectedMode, new TimeSpan(0, 0, seconds)));
        navigationManager.NavigateTo("playGame");
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/");
    }
}
