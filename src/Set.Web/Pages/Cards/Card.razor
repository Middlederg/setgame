@using Set.Core

<button type="button" @onclick="@OnSelected" class="
rounded-md 
        shadow border border-@Styles.BackgroundDarker 
        flex flex-col
        justify-self-center
        justify-center
        items-center
        hover:bg-@backgroundColor
        outline-none focus:outline-none
        @active
        px-2 sm:px-4 md:px-6
        h-16 sm:h-24 md:h-28 lg:h-40 xl:h-48">
    @foreach (var i in Enumerable.Range(0, SetCard.Number))
    {
        <img class="h-5 sm:h-7 md:h-9 lg:h-12 xl:h-14" src="img/@($"{SetCard.Path}.png")" />
    }

</button>

@code {
    private string backgroundColor = $"bg-{Styles.BackgroundDarker}";

    private string imageWidth => SetCard.Number == 2 ? "mx-1" : "";

    private string active = "bg-white";
    private bool selected;
    public bool Selected
    {
        get => selected;
        set
        {
            selected = value;
            active = value ? $"shadow-outline {backgroundColor}" : "bg-white";
        }
    }

    void OnSelected()
    {
        Selected = !Selected;
        if (Selected)
            OnCardSelected.InvokeAsync(this);
        else OnCardDeSelected.InvokeAsync(this);
    }

    [Parameter]
    public EventCallback<Card> OnCardSelected { get; set; }

    [Parameter]
    public EventCallback<Card> OnCardDeSelected { get; set; }

    [Parameter]
    public ICard SetCard { get; set; }
}

