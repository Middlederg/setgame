<button @onclick="@OnClick" class="bg-@Styles.PrimaryColor text-@Styles.Background
        hover:bg-@Styles.PrimaryColorLigther 
        font-semibold 
        @rounded
        outline-none focus:outline-none
        w-full
        p-2 md:p-4 
        md:text-xl md:text-2xl uppercase
        outline-none focus:outline-none
        flex items-center justify-center
        @IsDisabled" disabled="@IsDisabled">
    @ChildContent
    <span class="ml-1">@Text</span>
</button>

@code {

    [Parameter]
    public bool IsDisabled { get; set; } = false;
    private string disabled => IsDisabled ? "opacity-50 cursor-not-allowed" : "";

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Text { get; set; } = "";

    [Parameter]
    public bool Rounded { get; set; } = false;
    private string rounded => Rounded ? "rounded-full" : "rounded-sm";

    [Parameter]
    public EventCallback<PrimaryButton> OnButtonClicked { get; set; }

    private async Task OnClick()
    {
        await OnButtonClicked.InvokeAsync(this);
    }
}
